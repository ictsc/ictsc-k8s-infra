apiVersion: v1
kind: Namespace
metadata:
  name: envoy-gateway-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: eg
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gateway-helm
    app.kubernetes.io/version: v1.5.4
    helm.sh/chart: gateway-helm-v1.5.4
  name: envoy-gateway
  namespace: envoy-gateway-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hmac-secret-manager
  namespace: envoy-gateway-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: eg
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gateway-helm
    app.kubernetes.io/version: v1.5.4
    helm.sh/chart: gateway-helm-v1.5.4
  name: eg-gateway-helm-infra-manager
  namespace: envoy-gateway-system
rules:
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  - services
  - configmaps
  verbs:
  - create
  - get
  - list
  - delete
  - deletecollection
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  verbs:
  - create
  - get
  - delete
  - deletecollection
  - patch
- apiGroups:
  - autoscaling
  - policy
  resources:
  - horizontalpodautoscalers
  - poddisruptionbudgets
  verbs:
  - create
  - get
  - list
  - delete
  - deletecollection
  - patch
- apiGroups:
  - certificates.k8s.io
  resources:
  - clustertrustbundles
  verbs:
  - list
  - get
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: eg
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gateway-helm
    app.kubernetes.io/version: v1.5.4
    helm.sh/chart: gateway-helm-v1.5.4
  name: eg-gateway-helm-leader-election-role
  namespace: envoy-gateway-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: hmac-secret-manager
  namespace: envoy-gateway-system
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
- apiGroups:
  - ""
  resourceNames:
  - envoy-oidc-hmac
  resources:
  - secrets
  verbs:
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: eg-gateway-helm-envoy-gateway-role
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses/status
  verbs:
  - update
- apiGroups:
  - multicluster.x-k8s.io
  resources:
  - serviceimports
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.envoyproxy.io
  resources:
  - envoyproxies
  - envoypatchpolicies
  - clienttrafficpolicies
  - backendtrafficpolicies
  - securitypolicies
  - envoyextensionpolicies
  - backends
  - httproutefilters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.envoyproxy.io
  resources:
  - envoypatchpolicies/status
  - clienttrafficpolicies/status
  - backendtrafficpolicies/status
  - securitypolicies/status
  - envoyextensionpolicies/status
  - backends/status
  verbs:
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gateways
  - grpcroutes
  - httproutes
  - referencegrants
  - tcproutes
  - tlsroutes
  - udproutes
  - backendtlspolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gateways/status
  - grpcroutes/status
  - httproutes/status
  - tcproutes/status
  - tlsroutes/status
  - udproutes/status
  - backendtlspolicies/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - pods
  - pods/binding
  verbs:
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: eg
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gateway-helm
    app.kubernetes.io/version: v1.5.4
    helm.sh/chart: gateway-helm-v1.5.4
  name: eg-gateway-helm-infra-manager
  namespace: envoy-gateway-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: eg-gateway-helm-infra-manager
subjects:
- kind: ServiceAccount
  name: envoy-gateway
  namespace: envoy-gateway-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: eg
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gateway-helm
    app.kubernetes.io/version: v1.5.4
    helm.sh/chart: gateway-helm-v1.5.4
  name: eg-gateway-helm-leader-election-rolebinding
  namespace: envoy-gateway-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: eg-gateway-helm-leader-election-role
subjects:
- kind: ServiceAccount
  name: envoy-gateway
  namespace: envoy-gateway-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: hmac-secret-manager
  namespace: envoy-gateway-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: hmac-secret-manager
subjects:
- kind: ServiceAccount
  name: hmac-secret-manager
  namespace: envoy-gateway-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: eg-gateway-helm-envoy-gateway-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: eg-gateway-helm-envoy-gateway-role
subjects:
- kind: ServiceAccount
  name: envoy-gateway
  namespace: envoy-gateway-system
---
apiVersion: v1
data:
  envoy-gateway.yaml: |
    apiVersion: gateway.envoyproxy.io/v1alpha1
    kind: EnvoyGateway
    extensionApis: {}
    gateway:
      controllerName: gateway.envoyproxy.io/gatewayclass-controller
    logging:
      level:
        default: info
    provider:
      kubernetes:
        rateLimitDeployment:
          container:
            image: docker.io/envoyproxy/ratelimit:e74a664a
          patch:
            type: StrategicMerge
            value:
              spec:
                template:
                  spec:
                    containers:
                    - imagePullPolicy: IfNotPresent
                      name: envoy-ratelimit
        shutdownManager:
          image: docker.io/envoyproxy/gateway:v1.5.4
      type: Kubernetes
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: eg
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gateway-helm
    app.kubernetes.io/version: v1.5.4
    helm.sh/chart: gateway-helm-v1.5.4
  name: envoy-gateway-config
  namespace: envoy-gateway-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: eg
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gateway-helm
    app.kubernetes.io/version: v1.5.4
    control-plane: envoy-gateway
    helm.sh/chart: gateway-helm-v1.5.4
  name: envoy-gateway
  namespace: envoy-gateway-system
spec:
  ports:
  - name: grpc
    port: 18000
    targetPort: 18000
  - name: ratelimit
    port: 18001
    targetPort: 18001
  - name: wasm
    port: 18002
    targetPort: 18002
  - name: metrics
    port: 19001
    targetPort: 19001
  - name: webhook
    port: 9443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: eg
    app.kubernetes.io/name: gateway-helm
    control-plane: envoy-gateway
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: eg
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gateway-helm
    app.kubernetes.io/version: v1.5.4
    control-plane: envoy-gateway
    helm.sh/chart: gateway-helm-v1.5.4
  name: envoy-gateway
  namespace: envoy-gateway-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: eg
      app.kubernetes.io/name: gateway-helm
      control-plane: envoy-gateway
  template:
    metadata:
      annotations:
        prometheus.io/port: "19001"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/instance: eg
        app.kubernetes.io/name: gateway-helm
        control-plane: envoy-gateway
    spec:
      containers:
      - args:
        - server
        - --config-path=/config/envoy-gateway.yaml
        env:
        - name: ENVOY_GATEWAY_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: cluster.local
        image: docker.io/envoyproxy/gateway:v1.5.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: envoy-gateway
        ports:
        - containerPort: 18000
          name: grpc
        - containerPort: 18001
          name: ratelimit
        - containerPort: 18002
          name: wasm
        - containerPort: 19001
          name: metrics
        - containerPort: 9443
          name: webhook
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /config
          name: envoy-gateway-config
          readOnly: true
        - mountPath: /certs
          name: certs
          readOnly: true
      imagePullSecrets: []
      serviceAccountName: envoy-gateway
      terminationGracePeriodSeconds: 10
      volumes:
      - configMap:
          defaultMode: 420
          name: envoy-gateway-config
        name: envoy-gateway-config
      - name: certs
        secret:
          secretName: envoy-gateway
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hmac-secret-rotation
  namespace: envoy-gateway-system
spec:
  jobTemplate:
    metadata:
      labels:
        app.kubernetes.io/name: hmac-secret-rotation
    spec:
      backoffLimit: 0
      completions: 1
      parallelism: 1
      template:
        metadata:
          labels:
            app.kubernetes.io/name: hmac-secret-rotation
        spec:
          containers:
          - args:
            - -c
            - |
              kubectl create secret generic envoy-oidc-hmac  --from-file=hmac-secret=<(head -c 32 /dev/urandom) --dry-run=client --output=yaml | kubectl replace -f -
            command:
            - /bin/sh
            image: alpine/kubectl:1.34.1
            imagePullPolicy: IfNotPresent
            name: hmac-secret-rotation
          restartPolicy: Never
          serviceAccountName: hmac-secret-manager
  schedule: 0 2 1 */3 *
  startingDeadlineSeconds: 3600
  timeZone: Asia/Tokyo
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/hook: PostSync
  name: hmac-secret-init
  namespace: envoy-gateway-system
spec:
  backoffLimit: 0
  completions: 1
  parallelism: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: hmac-secret-init
    spec:
      containers:
      - args:
        - -c
        - |
          kubectl create secret generic envoy-oidc-hmac --from-file=hmac-secret=<(head -c 32 /dev/urandom) || true
        command:
        - /bin/sh
        image: alpine/kubectl:1.34.1
        imagePullPolicy: IfNotPresent
        name: hmac-secret-init
      restartPolicy: Never
      serviceAccountName: hmac-secret-manager
  ttlSecondsAfterFinished: 300
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: envoy
  namespace: envoy-gateway-system
spec:
  commonName: '*'
  dnsNames:
  - '*.envoy-gateway-system'
  issuerRef:
    kind: Issuer
    name: envoy-gateway-issuer
  secretName: envoy
  usages:
  - digital signature
  - content commitment
  - data encipherment
  - key encipherment
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: envoy-gateway
  namespace: envoy-gateway-system
spec:
  commonName: envoy-gateway
  dnsNames:
  - envoy-gateway
  - envoy-gateway.envoy-gateway-system
  - envoy-gateway.envoy-gateway-system.svc
  - envoy-gateway.envoy-gateway-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: envoy-gateway-issuer
  secretName: envoy-gateway
  usages:
  - digital signature
  - content commitment
  - data encipherment
  - key encipherment
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: envoy-gateway-ca
  namespace: envoy-gateway-system
spec:
  commonName: envoy-gateway
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: ClusterIssuer
    name: selfsigned-issuer
  privateKey:
    algorithm: RSA
    size: 2048
  secretName: envoy-gateway-ca
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: envoy-rate-limit
  namespace: envoy-gateway-system
spec:
  commonName: '*'
  dnsNames:
  - '*.envoy-gateway-system'
  issuerRef:
    kind: Issuer
    name: envoy-gateway-issuer
  secretName: envoy-rate-limit
  usages:
  - digital signature
  - content commitment
  - data encipherment
  - key encipherment
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: envoy-gateway-issuer
  namespace: envoy-gateway-system
spec:
  ca:
    secretName: envoy-gateway-ca
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: envoy-gateway
  namespace: envoy-gateway-system
spec:
  endpointSelector:
    matchLabels:
      app.kubernetes.io/instance: eg
      app.kubernetes.io/name: gateway-helm
      control-plane: envoy-gateway
  ingress:
  - fromEndpoints:
    - matchLabels:
        app.kubernetes.io/component: proxy
        app.kubernetes.io/managed-by: envoy-gateway
        app.kubernetes.io/name: envoy
    toPorts:
    - ports:
      - port: grpc
        protocol: TCP
  - fromEntities:
    - host
    - remote-node
    toPorts:
    - ports:
      - port: webhook
        protocol: TCP
---
apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  name: envoy-gateway
  namespace: envoy-gateway-system
spec:
  controllerName: gateway.envoyproxy.io/gatewayclass-controller
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: envoy-gateway-system/envoy-gateway-ca
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/hook-weight: "-1"
  labels:
    app.kubernetes.io/component: topology-injector
    app.kubernetes.io/instance: eg
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gateway-helm
    app.kubernetes.io/version: v1.5.4
    helm.sh/chart: gateway-helm-v1.5.4
  name: envoy-gateway-topology-injector.envoy-gateway-system
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: envoy-gateway
      namespace: envoy-gateway-system
      path: /inject-pod-topology
      port: 9443
  failurePolicy: Ignore
  name: topology.webhook.gateway.envoyproxy.io
  namespaceSelector:
    matchExpressions:
    - key: kubernetes.io/metadata.name
      operator: In
      values:
      - envoy-gateway-system
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods/binding
  sideEffects: None
